package com.kingjellyfishii.hivemcstats;

import java.util.logging.Logger;

import com.kingjellyfishii.hivemcstats.proxy.CommonProxy;
import com.kingjellyfishii.hivemcstats.util.referance;
import com.mojang.realmsclient.gui.ChatFormatting;

import net.minecraftforge.client.ClientCommandHandler;
import net.minecraftforge.client.event.ClientChatReceivedEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraft.client.Minecraft;
import net.minecraft.util.text.ITextComponent;
import net.minecraft.util.text.TextComponentString;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

@Mod(modid = referance.MOD_ID, name = referance.NAME, version = referance.VERSION)
public class Main {
	
	private static Logger logger;
	private static Minecraft mc;
	private int done = 0;
	
	private String playername;
	private String victories;
	private String games;
	private String kills;
	private String deaths;
	private String beds;
	
	@Instance
	public static Main instance;
	
	@SidedProxy(clientSide = referance.CLIENT_PROXY_CLASS, serverSide = referance.COMMON_PROXY_CLASS)
	public static CommonProxy proxy;
	

	@EventHandler
	public static void PreInit(FMLPreInitializationEvent event) {
		
	}
	
	@EventHandler
	public static void init(FMLInitializationEvent event) {
		MinecraftForge.EVENT_BUS.register(instance);
		ClientCommandHandler.instance.registerCommand(new CommandGet());
	}
	@EventHandler
	public static void PostInit(FMLPostInitializationEvent event) {
		mc = Minecraft.getMinecraft();
	}
	
	@SubscribeEvent
	public void onChat(ClientChatReceivedEvent e) {
		ITextComponent c = e.getMessage();
		String text = c.getFormattedText();
		String result = text.replaceAll("[^\\x00-\\x7F]", "");
		//mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + "IT WORLS !!!!!" + text));
		if (result.contains("'s Stats")) { 
			String[] playername_f = result.split("'")[0].split(" ");
			playername = playername_f[playername_f.length - 1];
			e.setCanceled(true);
		}
		
		if (result.contains("Victories: ")) {
			victories = result.split(":")[1].replaceAll("[^\\d.]", "");
			e.setCanceled(true);
			//mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + victories));
		}
		
		if (result.contains("Games Played: ")) {
			games = result.split(":")[1].replaceAll("[^\\d.]", "");
			e.setCanceled(true);
			//mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + games));
		}
		
		if (result.contains("Kills: ")) {
			kills = result.split(":")[1].replaceAll("[^\\d.]", "");
			e.setCanceled(true);
			//mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + kills));
		}
		
		if (result.contains("Deaths: ")) {
			deaths = result.split(":")[1].replaceAll("[^\\d.]", "");
			e.setCanceled(true);
			//mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + deaths));
		}
		
		if (result.contains("Beds Destroyed: ")) {
			beds = result.split(":")[1].replaceAll("[^\\d.]", "");
			done = 1;
			e.setCanceled(true);
			//mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + beds));
		}
		
		if (done == 1) {
			done = 0;
			mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + victories));
			mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + games));
			mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + kills));
			mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + deaths));
			mc.player.sendMessage(new TextComponentString(ChatFormatting.DARK_GREEN + beds));
		}
	}
	
	public static Main instance() {
		return instance;
	}
	
}
